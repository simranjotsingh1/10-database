
USE AdventureWorks2012;
select * from data
where SoldDate  between  '8/1/2019' and '8/30/2019'
order by SoldDate;

select count(*) from  data
where SoldDate  between  '8/1/2019' and '8/15/2019';

USE AdventureWorks2012;
select  count(*) from  data
where SoldDate  > '8/15/2019';

USE AdventureWorks2012;
select  count(*) from  data
where SoldDate  < '8/15/2019';

select month(soldDate) as month
from data;


select Type, Description, AVG([Sold Price]) from data
group by Type, Description
order by AVG([Sold Price]) desc;

select Type, Description, AVG([Sold Price]) ,
Avg(Bedroom) 
Bedroom from data
group by Type, Description
order by AVG([Sold Price]) desc;

select Type, Description, AVG([Sold Price]) ,count(*),
Avg(Bedroom) 
Bedroom from data
where SoldDate  between '9/15/2019' and '9/30/2019'
group by Type, Description
order by AVG([Sold Price]) desc;

select count(Type), Type, Description, AVG([Sold Price]) ,
Avg(Bedroom) 
Bedroom from data
where SoldDate  between '9/15/2019' and '9/30/2019'
group by Type, Description
order by AVG([Sold Price]) desc;


select count(Type), Type, Description, AVG([Sold Price]) ,
Avg(Bedroom) 
Bedroom from data
where SoldDate  between '9/1/2019' and '9/15/2019'
group by Type, Description
order by AVG([Sold Price]) desc;


select left(Streetname,1) as streetletter from data;


select * from data where
left(Streetname,1) = 'A';

select * from data where
left(Streetname,2) = 'Al';


select left(Streetname,1) as Initial, count(*) as CountOfInitial
from data
group by left(Streetname,1);

\

select Type,AVG([Sold Price])
from data
where month(SoldDate) between 7 and 9
group by Type;
-------------------------------------------------------------------------------------

select Type,AVG([Sold Price]) as SoldPriceAverage
from data
where month(SoldDate) between 7 and 9
group by Type
order by AVG([Sold Price]) desc;

------------------------------------------------------------------------------------
-- average selling price per type of house
-- per number of bedrooms
select Type,Description,Bedroom, Baths, Basement1, AVG([Sold Price]) as SoldPriceAverage
from data
where month(SoldDate) between 7 and 9
group by Type,Description,Bedroom,Baths,Basement1
order by AVG([Sold Price]) desc;


select * from tblEmployee;

select * from tblTransaction;
------------------------------------------------------------------------------------
Create view EmployeeProfile as
SELECT e.EmployeeFirstName,e.EmployeeLastName,e.DateOfBirth,d.DepartmentHead
from tblEmployee as e ,tblDepartment as d
where e.Department = d.Department and year(e.DateOfBirth) > 1970
and month(e.DateOfBirth) in (1,2,3);



select * from EmployeeProfile;

Drop table EmployeeProfile;
------------------------------------------------------------------------------------
create view EmployeeProfile as
select * from tblEmployee as e
where e.employeeLastName > 'M';
-----------------------------------------------------------------------------------
create view WinningEmployee1 as
select * from employeeprofile
where EmployeeFirstName in ('jane','Rob');

select * from WinningEmployee1;


select s.StudentID , s.StudentName , s.Coursenumber as Course , c.RoomNunber as Roomnumber

from students as s ,classroom as c 

where s.SectionNumber =c.SectionNumber  

select * from student
order by StudentName;

select * from classroom;

insert into student
values(109,'George','python','G3')

drop table studentdata;

 ALTER TABLE student
DROP  studentrecord;

Alter Table student
add constraint studentrecord unique(StudentId,StudentName,SectionNumber);

delete from student 
where studentname = 'George';

Alter Table students
add constraint uc unique(studentid,sectionNumber);


select * from [dbo].[customersales]

select * from [dbo].[shoes]


select * from [dbo].[customersales]
where brandname = 'Jansport';

select * from [dbo].[customersales]
order by brandname Asc;


select * from [dbo].[shoes]
order by brandname Asc;


Alter table shoes
add constraint Pk_product
primary key (price, color, style, brandname)


Alter table customersales
Alter column brandname nvarchar(255) Not Null;


Alter table customersales
add constraint Pk_customersales
primary key ( color, style,brandname)


Alter table shoes
  add constraint FK_Sales_customer
    FOREIGN KEY (color, Style , brandname)
    REFERENCES customersales (color, style,brandname)
	ON DELETE CASCADE
	ON UPDATE CASCADE

ALTER TABLE customersales
drop constraint Pk_customersales

select customername, purchasedate ,color, style,brandname from customersales
GROUP BY customername, purchasedate, color, style,brandname;

